{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenidos a mis pracitcas Estas son mis practicas de la asignatura Unidad 1 Practicas de la unidad 1 - Ejercicio 1 - Ejercicio 2 Unidad 2 Practicas de la unidad 2 - Practica 1 - Practica 2 - Practica 3","title":"Home"},{"location":"#bienvenidos-a-mis-pracitcas","text":"Estas son mis practicas de la asignatura","title":"Bienvenidos a mis pracitcas"},{"location":"#unidad-1","text":"Practicas de la unidad 1 - Ejercicio 1 - Ejercicio 2","title":"Unidad 1"},{"location":"#unidad-2","text":"Practicas de la unidad 2 - Practica 1 - Practica 2 - Practica 3","title":"Unidad 2"},{"location":"ex1/u1_ex1_IkerPatino/","text":"Iker Pati\u00f1o Alvarez Implantaci\u00f3 d'Aplicacions Web Ejercicio 1: Introducci\u00f3n a git y GitHub Crea un compte a GitHub (Si no el tens!!!). La forma d\u2019accedir als repositoris remots de GitHub ser\u00e0 per SSH, per tant has de copiar la teua clau p\u00fablica RSA a GitHub, per aix\u00f2: Copia el contingut del teu fitxer ~/.ssh/id_rsa.pub, per aix\u00f2: afegeix una nova clau SSH a l\u2019apartat \u201cSSH keys\u201d del teu perfil a GitHub i enganxa el contingut de la teua clau p\u00fablica. Si no teniu aquest fitxer, podeu generar una nova clau ssh p\u00fablica seguint les instruccions de l\u2019article Treballant amb claus ssh. Un cop finalitzat aquest exercici, haur\u00e0s de repetir-ho fent \u00fas de tokens. Crea a GitHub un repositori amb el nom prova_el_teu_nom (inicialitza el repositori amb un fitxer README) i la descripci\u00f3 Repositorio de prueba 2ASIX. Instal\u00b7la git en el teu ordinador (si no el tens instalado!!!). apt-get install git Configuraci\u00f3 de git. El primer que hauries de fer quan instal\u00b7les Git \u00e9s establir el teu nom dusuari i adre\u00e7a de correu electr\u00f2nic (Assegura\u2019t que les dades s\u00f3n correctes i que has posat el teu nom complet). Aix\u00f2 \u00e9s important perqu\u00e8 les confirmacions de canvis (commits) a Git utilitzen aquesta informaci\u00f3, i \u00e9s introdu\u00efda de manera immutable en els commits que envieu: git config --global user.name \"John Doe\" git config --global user.email johndoe@example.com De nou, nom\u00e9s cal fer-ho una vegada si especifiques l\u2019opci\u00f3 \u2013global, ja que Git sempre utilitzar\u00e0 aquesta informaci\u00f3 per a tot el que facis en aquest sistema. Clonar el repositori remot. Copia la url SSH del repositori (no copi\u00efs la URL https) i clonarem el repositori al nostre ordinador. git clone git@github.com :xxxxxxx/xxxxxxx.git Para comprobar que tienes configurado el repositorio usando la url SSH puedes ver el fichero de configuraci\u00f3n en .git/config. Comprova que dins del repositori que hem creat hi ha el fitxer README.md, en aquest fitxer podem posar la descripci\u00f3 del projecte. Crearem un nou fitxer, l\u2019afegirem al nostre repositori local i despr\u00e9s ho sincronitzarem amb el nostre repositori remot de GitHub. Cada vegada que fem una modificaci\u00f3 en un fitxer ho podem assenyalar creant un commit. Els missatges dels commits s\u00f3n fonamentals per explicar l\u2019evoluci\u00f3 d\u2019un projecte. Un commit ha de ser un petit conjunt de canvis dels fitxers del projecte amb una certa coher\u00e8ncia. Per comprovar l\u2019estat del meu repositori local: Busca informaci\u00f3 per a crear un nou repositori anomenat prova2_el_teu_nom. En aquesta ocasi\u00f3, crea primer el repositori local (usant git init) i despr\u00e9s cerca informaci\u00f3 per sincronitzar-lo i crear el repositori remot a GitHub. Ahora a\u00f1adimos texto al README.md.","title":"Ejercicio1"},{"location":"ex2/u1_ex2_IkerPatino/","text":"Iker Pati\u00f1o Alvarez Implantaci\u00f3 d'Aplicacions Web Exercici 2: Introducci\u00f3 a Markdown Crea una carpeta en un repositori local (creat en l\u2019exercici anterior) que s\u2019anomene IAW_mark- down, que incloga un fitxer README.md. Afegeix contingut al fitxer README.md utilitzant tots els elements de la sintaxi de Markdown que hem recordat. Entre altres inclou: una imatge al document que sigui un enlla\u00e7 a una URL externa. crea un directori anomenat img al repositori i afegeix una imatge. incorpora la imatge que has afegit dins del document. Crea un nou document markdown al repositori. Crea un enlla\u00e7 des del fitxer README.md al nou document que acabes de crear Generar un document .pdf a partir del fitxer markdown.md Ahora despu\u00e9s de subirlo a github, podemos comprobar que est\u00e1 todo.","title":"Ejercicio2"},{"location":"pt1/u1_pt1_IkerPati%C3%B1o/","text":"Iker Pati\u00f1o Alvarez Implantaci\u00f3 d'Aplicacions Web Pr\u00e0ctica 01 \u2013 Git. Treballant amb branques i unions Crea una branca que s\u2019anomene primera al teu repositori local, i executa la instrucci\u00f3 necess\u00e0ria per comprovar que s\u2019ha creat. Para ello desde la terminal, entramos a la carpeta de nuestro repositorio y comprobamos las ramas que hay. Ahora creamos una rama nueva, comprobamos que la rama se ha creado, luego cambiamos a la rama para hacer cambios desde la nueva rama y comprobamos que estamos en la rama correcta. Ahora subimos la rama a github. Crea un nou fitxer en aquesta branca i fusiona\u2019l amb la principal. S\u2019ha produ\u00eft un conflicte? Raona la resposta. Crearemos un nuevo documento a\u00f1adiendo texto en el. Ahora fusionaremos esta rama con la principal, para ello cambiamos a la rama principal y fusionamos. Esborra la branca primera. Ahora borramos la rama que creamos anteriormente y comprobamos. Crea una branca que s\u2019anomene segona, i modifica un fitxer per produir un conflicte en unir-lo a la branca principal. Lliura el contingut del fitxer on s\u2019ha produ\u00eft el conflicte. A continuaci\u00f3n creamos una nueva rama como vimos anteriormente. Ahora modificaremos el texto que creamos anteriormente. Ahora fusionaremos a la rama principal. Soluciona el conflicte que has creat al punt anterior i sincronitza la branca segona al remot.","title":"Practica1"},{"location":"pt2/u1_pt2_IkerPati%C3%B1o/","text":"Iker Pati\u00f1o Alvarez Implantaci\u00f3 d'Aplicacions Web Pr\u00e0ctica 2: Col\u00b7laborant - pull request (PR) Qu\u00e8 has de fer? Un pull request \u00e9s una petici\u00f3 que es fa al propietari d\u2019un repositori original perqu\u00e8 incorpore els canvis que suggereixes. En aquest exercici has de fer un pull request sobre el repositori seg\u00fcent: ( https://github.com/espemm/exercici4.git ) Per aix\u00f2: Realitza primer un pull request al repositori per sol\u00b7licitar dos canvis: Has de canviar el fitxer README.md per afegir un enlla\u00e7 a la llista, on pose les teues inicials i vaja al fitxer que crear\u00e0s en el directori files . Crea un fitxer al directori files , que s\u2019anomene les_teus_inicials.md (en el meu cas s\u2019anomena-ria emm.md) i on escrigues a markdown la resposta a la pregunta: Quin m\u00f2dul t\u2019agrada m\u00e9s? I per qu\u00e8 (cal utilitzar almenys 5 marques diferents de markdown). Realitza el pull request (amb un missatge de commit significatiu) i espera que sigua acceptat per mi. En acabar l\u2019exercici has de sincronitzar el teu repositori perqu\u00e8 tingues tots els fitxers de tots els teus companys. Tria un company i fes un Pull Request sobre un repositori seu. El mateix company o un altre ha de fer un Pull Request sobre un repositori teu. Primero iremos al enlace y crearemos un nuevo fork. Ahora clonamos el repositorio en local. Comprobamos el repositorio. Creamos una rama y la subimos a github. Ahora copiamos la imagen que hemos descargado a la carpeta files dentro del repositorio. Ahora editamos el archivo README.md para que al clickar en nuestro nombre nos env\u00ede a la imagen. A continuaci\u00f3n en files creamos un archivo con nuestras iniciales donde usamos md. Ahora cambiamos de rama a main para luego fusionar las ramas. Borramos la rama y a continuaci\u00f3n lo subimos a github. Ahora comprobamos que se ha actualizado en nuestro repositorio pero NO en el de la profe. Ahora haremos un pull request. Ahora esperamos que la profesora acepte nuestro pull request. Ahora, en un repositorio de un compa\u00f1ero (Fran), realizaremos los mismos pasos anteriores para comprobar que funciona. Una vez hayamos clonado el repositorio de manera local, crearemos un archivo para actualizar. Como observamos en la siguiente captura, hemos visto que se ha actualizado con mi fichero pero todav\u00eda no se ha hecho un pull request. Ahora esperamos a que mi compa\u00f1ero fran acepte el pull request, De mientras, aceptaremos el pull request de nuestro compa\u00f1ero en nuestro repositorio. Ahora vemos dentro de nuestro repositorio el cambio que ha hecho fran, que es \u201cprobafran.txt\u201d. Ahora iremos a su repositorio a ver si nos lo ha aceptado y veremos el cambio dentro de su repositorio. Que como comprobamos se ha hecho un merge en el pull request y vemos mi archivo \u201ciker.txt\u201d","title":"Practica2"},{"location":"pt3/u1_pt3_IkerPati%C3%B1o/","text":"Iker Pati\u00f1o Alvarez Implantaci\u00f3 d'Aplicacions Web Pr\u00e0ctica 3: Mkdocs - Github Pages Qu\u00e8 has de fer? En aquesta pr\u00e0ctica desplegarem una p\u00e0gina web est\u00e0tica amb MkDocs i GitHub Pages. Per aix\u00f2, segueix els passos seg\u00fcents: Crea un nou projecte de MkDocs al teu ordinador. Escriu la documentaci\u00f3 del vostre projecte en format Markdown. Genera la p\u00e0gina web amb MkDocs. Crea un repositori al GitHub per al teu projecte. Puja la p\u00e0gina web a GitHub Pages. Comprova que la URL de la teua p\u00e0gina web a GitHub Pages funciona correctament. Primero instalamos mkdocs en nuestro equipo. A continuaci\u00f3n creamos un nuevo proyecto. Ahora entramos a una carpeta llamada docs, dentro tendremos el fichero que se muestra en la pagina, modificamos un poco. Ahora creamos la p\u00e1gina web y la lanzamos como web local. Que como comprobamos, si ponemos la direcci\u00f3n IP que nos indica, veremos la p\u00e1gina. Ahora creamos un repositorio en github. Ahora desde dentro del proyecto mkdocs, haremos los comandos que vimos en practicas anteriores para subir lo que tenemos en el proyecto a github. Y comprobamos que tenemos todo. Ahora subimos la p\u00e1gina a GithubPages. Entramos al enlace que nos indica y comprobamos. Enlaces: Repositorio github: https://github.com/ikerpa04/iker_patino.git P\u00e1gina GitHub Pages: https://ikerpa04.github.io/iker_patino/","title":"Practica3"},{"location":"pt3/u1_pt3_IkerPati%C3%B1o/#que-has-de-fer","text":"En aquesta pr\u00e0ctica desplegarem una p\u00e0gina web est\u00e0tica amb MkDocs i GitHub Pages. Per aix\u00f2, segueix els passos seg\u00fcents: Crea un nou projecte de MkDocs al teu ordinador. Escriu la documentaci\u00f3 del vostre projecte en format Markdown. Genera la p\u00e0gina web amb MkDocs. Crea un repositori al GitHub per al teu projecte. Puja la p\u00e0gina web a GitHub Pages. Comprova que la URL de la teua p\u00e0gina web a GitHub Pages funciona correctament. Primero instalamos mkdocs en nuestro equipo. A continuaci\u00f3n creamos un nuevo proyecto. Ahora entramos a una carpeta llamada docs, dentro tendremos el fichero que se muestra en la pagina, modificamos un poco. Ahora creamos la p\u00e1gina web y la lanzamos como web local. Que como comprobamos, si ponemos la direcci\u00f3n IP que nos indica, veremos la p\u00e1gina. Ahora creamos un repositorio en github. Ahora desde dentro del proyecto mkdocs, haremos los comandos que vimos en practicas anteriores para subir lo que tenemos en el proyecto a github. Y comprobamos que tenemos todo. Ahora subimos la p\u00e1gina a GithubPages. Entramos al enlace que nos indica y comprobamos. Enlaces: Repositorio github: https://github.com/ikerpa04/iker_patino.git P\u00e1gina GitHub Pages: https://ikerpa04.github.io/iker_patino/","title":"Qu\u00e8 has de fer?"},{"location":"u2_ex1_IkerPatino/u2_ex1_IkerPatino/","text":"Practica 1: Instalaci\u00f3n de un servidor LEMP Instalaci\u00f3n del servidor de base de datos Instalamos la base de datos. Ejecutamos la configuraci\u00f3n segura inicial. Creamos una base de datos y un usuario nuevo. Instalaci\u00f3n de Nginx i PHP Instalamos los paquetes necesarios. Verificaci\u00f3n del funcionamiento de nginx Tenemos que modificar el archivo de configuraci\u00f3n. Accedemos desde el navegador, a la pagina web de inicio del servidor Verificaci\u00f3n del funcionamiento de PHP Creamos un fichero dentro del directorio /var/www/html. Comprobamos que los ficheros servidos por Apache son propiedad de www-data:www-data. Accedemos al navegador y vemos la configuraci\u00f3n php instalado. Acceso con nombre (resoluci\u00f3n de nombres) Editamos el archivo /etc/hosts y a\u00f1adimos la direcci\u00f3n IP y el nombre. Ahora visitamos otra vez la p\u00e1gina web.","title":"Practica1"},{"location":"u2_ex1_IkerPatino/u2_ex1_IkerPatino/#instalacion-del-servidor-de-base-de-datos","text":"Instalamos la base de datos. Ejecutamos la configuraci\u00f3n segura inicial. Creamos una base de datos y un usuario nuevo.","title":"Instalaci\u00f3n del servidor de base de datos"},{"location":"u2_ex1_IkerPatino/u2_ex1_IkerPatino/#instalacion-de-nginx-i-php","text":"Instalamos los paquetes necesarios.","title":"Instalaci\u00f3n de Nginx i PHP"},{"location":"u2_ex1_IkerPatino/u2_ex1_IkerPatino/#verificacion-del-funcionamiento-de-nginx","text":"Tenemos que modificar el archivo de configuraci\u00f3n. Accedemos desde el navegador, a la pagina web de inicio del servidor","title":"Verificaci\u00f3n del funcionamiento de nginx"},{"location":"u2_ex1_IkerPatino/u2_ex1_IkerPatino/#verificacion-del-funcionamiento-de-php","text":"Creamos un fichero dentro del directorio /var/www/html. Comprobamos que los ficheros servidos por Apache son propiedad de www-data:www-data. Accedemos al navegador y vemos la configuraci\u00f3n php instalado.","title":"Verificaci\u00f3n del funcionamiento de PHP"},{"location":"u2_ex1_IkerPatino/u2_ex1_IkerPatino/#acceso-con-nombre-resolucion-de-nombres","text":"Editamos el archivo /etc/hosts y a\u00f1adimos la direcci\u00f3n IP y el nombre. Ahora visitamos otra vez la p\u00e1gina web.","title":"Acceso con nombre (resoluci\u00f3n de nombres)"},{"location":"u2_ex2_IkerPatino/u2_ex2_IkerPatino/","text":"Pr\u00e0ctica 2: Servir m\u00faltiples dominis Virtual hosting amb nginx Copiamos dos veces el fichero de por defecto. Antes de configurar los ficheros, crearemos los enlaces directos. Ahora descargaremos las dos p\u00e1ginas que indicaremos que enfoquen all\u00ed. Movemos los ficheros en la carpeta /var/www/. A continuaci\u00f3n modificaremos el fichero de configuraci\u00f3n de la p\u00e1gina1. Ahora a\u00f1adiremos en el fichero /etc/hosts del equipo principal. Y ahora comprobamos en el navegador. Ahora modificamos el fichero de la p\u00e1gina2. Ahora modificamos el fichero /etc/hosts. Y comprobamos en el navegador.","title":"Practica2"},{"location":"u2_ex2_IkerPatino/u2_ex2_IkerPatino/#virtual-hosting-amb-nginx","text":"Copiamos dos veces el fichero de por defecto. Antes de configurar los ficheros, crearemos los enlaces directos. Ahora descargaremos las dos p\u00e1ginas que indicaremos que enfoquen all\u00ed. Movemos los ficheros en la carpeta /var/www/. A continuaci\u00f3n modificaremos el fichero de configuraci\u00f3n de la p\u00e1gina1. Ahora a\u00f1adiremos en el fichero /etc/hosts del equipo principal. Y ahora comprobamos en el navegador. Ahora modificamos el fichero de la p\u00e1gina2. Ahora modificamos el fichero /etc/hosts. Y comprobamos en el navegador.","title":"Virtual hosting amb nginx"},{"location":"u2_ex3_IkerPati%C3%B1o/u2_ex3_IkerPati%C3%B1o/","text":"Pr\u00e0ctica 3: Certificat SSL/TLS Creaci\u00f3n Certificado Crearemos el certificado autofirmado. Luego nos dir\u00e1 que pongamos unos datos. Automatizar creaci\u00f3n del certificado autofirmado Automatizamos creando un script. Consultar certificado Consultar informaci\u00f3n del sujeto del certificado. Consultar la fecha de caducidad del certificado. Configurar un Block SSL/TSL en Nginx Configurar el Bloc SSL Configuramos el sitio seguro ssl. Creamos el sitio seguro Creamos el siguiente directorio. Creamos el documento de inicio. Aplicamos cambios y reiniciamos el servicio. Verificamos el correcto funcionamiento Desde un cliente accedemos por IP. Vemos que nos salta una alerta de advertencia, en Avanzado aceptamos el riesgo. Ahora volvemos a entrar con el nombre de la p\u00e1gina. Volvemos a realizar el proceso para acceder. Block de redirecci\u00f3n de HTTP a HTTPS. En el bloque de por defecto default y a\u00f1adimos las siguientes l\u00edneas. Reiniciamos el servicio y entramos en el navegador pero con el enlace con http. Y al buscar, vemos que nos redirigi\u00f3 a https.","title":"Practica3"},{"location":"u2_ex3_IkerPati%C3%B1o/u2_ex3_IkerPati%C3%B1o/#creacion-certificado","text":"Crearemos el certificado autofirmado. Luego nos dir\u00e1 que pongamos unos datos.","title":"Creaci\u00f3n Certificado"},{"location":"u2_ex3_IkerPati%C3%B1o/u2_ex3_IkerPati%C3%B1o/#automatizar-creacion-del-certificado-autofirmado","text":"Automatizamos creando un script.","title":"Automatizar creaci\u00f3n del certificado autofirmado"},{"location":"u2_ex3_IkerPati%C3%B1o/u2_ex3_IkerPati%C3%B1o/#consultar-certificado","text":"Consultar informaci\u00f3n del sujeto del certificado. Consultar la fecha de caducidad del certificado.","title":"Consultar certificado"},{"location":"u2_ex3_IkerPati%C3%B1o/u2_ex3_IkerPati%C3%B1o/#configurar-un-block-ssltsl-en-nginx","text":"Configurar el Bloc SSL Configuramos el sitio seguro ssl. Creamos el sitio seguro Creamos el siguiente directorio. Creamos el documento de inicio. Aplicamos cambios y reiniciamos el servicio. Verificamos el correcto funcionamiento Desde un cliente accedemos por IP. Vemos que nos salta una alerta de advertencia, en Avanzado aceptamos el riesgo. Ahora volvemos a entrar con el nombre de la p\u00e1gina. Volvemos a realizar el proceso para acceder. Block de redirecci\u00f3n de HTTP a HTTPS. En el bloque de por defecto default y a\u00f1adimos las siguientes l\u00edneas. Reiniciamos el servicio y entramos en el navegador pero con el enlace con http. Y al buscar, vemos que nos redirigi\u00f3 a https.","title":"Configurar un Block SSL/TSL en Nginx"}]}